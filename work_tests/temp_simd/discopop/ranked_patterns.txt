13
14
19
20
21
27
28
30
39
43
44
Do-all at: 1:5
Start line: 1:13
End line: 1:17
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['j', 'i']
shared: []
first private: []
reduction: []
last private: ['result']

Do-all at: 1:8
Start line: 1:14
End line: 1:16
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['j']
shared: []
first private: ['i']
reduction: []
last private: ['result']

Do-all at: 1:16
Start line: 1:19
End line: 1:25
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['j', 'k', 'i']
shared: []
first private: []
reduction: []
last private: ['result2']

Do-all at: 1:19
Start line: 1:20
End line: 1:24
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['j', 'k']
shared: []
first private: ['i']
reduction: []
last private: ['result2']

Do-all at: 1:22
Start line: 1:21
End line: 1:23
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['k']
shared: []
first private: ['j', 'i']
reduction: []
last private: ['result2']

Do-all at: 1:31
Start line: 1:27
End line: 1:34
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['j', 'k', 'i']
shared: []
first private: []
reduction: []
last private: ['result3']

Do-all at: 1:34
Start line: 1:28
End line: 1:33
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['j', 'k']
shared: []
first private: ['i']
reduction: []
last private: ['result3']

Do-all at: 1:37
Start line: 1:30
End line: 1:32
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['k']
shared: []
first private: ['temp']
reduction: []
last private: ['result3']

Do-all at: 1:46
Start line: 1:39
End line: 1:42
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['i']
shared: ['a', 'b']
first private: []
reduction: []
last private: []

Do-all at: 1:51
Start line: 1:43
End line: 1:47
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['j', 'i']
shared: []
first private: ['b']
reduction: []
last private: []

Do-all at: 1:54
Start line: 1:44
End line: 1:46
iterations: 1000
instructions: 0
workload: 0
pragma: "#pragma omp parallel for"
private: ['j']
shared: []
first private: ['i', 'b']
reduction: []
last private: []


Geometric decomposition at: 1:3
Start line: 1:8
End line: 1:53
Type: Geometric Decomposition Pattern
Do-All loops: ['1:5', '1:8', '1:16', '1:19', '1:22', '1:31', '1:34', '1:37', '1:46', '1:51', '1:54']
Reduction loops: []
	Number of tasks: 24
	Chunk limits: 1000
	pragma: for (i = 0; i < num-tasks; i++) #pragma omp task]
	private: []
	shared: []
	first private: ['i']
	reduction: []
	last private: []
Time taken for pattern detection: 0.22185659408569336
